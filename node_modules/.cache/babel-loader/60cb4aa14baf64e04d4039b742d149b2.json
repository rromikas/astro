{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Romas\\\\astro\\\\src\\\\components\\\\dashboard\\\\server\\\\automessages.jsx\";\nimport React from \"react\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { FaPen, FaTrash, FaCheck, FaPlus } from \"react-icons/fa\";\nimport { useState, useEffect } from \"react\";\nimport { getLongestWidth } from \"../utilities/events\";\n\nconst AutoMessages = () => {\n  const allEvents = [\"Welcome\", \"Goodbye\", \"Level\", \"Role\"];\n  const [longestEvent, setLongestEvent] = useState(0);\n  const [autoroles, setAutoroles] = useState([{\n    on: {\n      current: \"Welcome\"\n    },\n    message: {\n      current: \"Hello, {USER}, welcome to our channel\"\n    }\n  }, {\n    on: {\n      current: \"Goodbye\"\n    },\n    message: {\n      current: \"Bye, {USER}, we will miss you\"\n    }\n  }, {\n    on: {\n      current: \"Level\"\n    },\n    message: {\n      current: \"{USER} has just leveled up to {LEVEL}\"\n    }\n  }]);\n  const [editRoles, setEditRoles] = useState({\n    id: -1,\n    show: false,\n    type: \"wait\"\n  });\n  useEffect(() => {\n    let longest = getLongestWidth(allEvents);\n    setLongestEvent(longest);\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"w-100 py-4 px-4\",\n    style: {\n      position: \"relative\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"lead justify-content-center mb-3 d-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Auto Messages\"), editRoles.type === \"wait\" ? React.createElement(\"div\", {\n    onClick: e => {\n      let index = autoroles.length;\n      setAutoroles(roles => {\n        let arr = [...roles];\n        arr[index] = {\n          on: {\n            current: \"select\"\n          },\n          message: {\n            current: \"type some message\"\n          }\n        };\n        return arr;\n      });\n      setEditRoles(edit => Object.assign({}, edit, {\n        type: \"edit\",\n        id: index,\n        show: true\n      }));\n    },\n    style: {\n      position: \"absolute\",\n      top: \"30px\",\n      right: \"30px\",\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"50%\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      cursor: \"pointer\"\n    },\n    className: \"convex-2 ml-4 select-disable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(FaPlus, {\n    fontSize: \"18\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    onClick: () => {\n      setEditRoles(edit => Object.assign({}, edit, {\n        type: \"wait\"\n      }));\n    },\n    style: {\n      position: \"absolute\",\n      top: \"30px\",\n      right: \"30px\",\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"50%\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      cursor: \"pointer\"\n    },\n    className: \"convex-2 select-disable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(FaCheck, {\n    fontSize: \"18\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), editRoles.type !== \"wait\" && React.createElement(\"div\", {\n    onClick: () => {\n      setAutoroles(roles => {\n        let arr = [...roles];\n        arr.splice(editRoles.id, 1);\n        return arr;\n      });\n      setEditRoles(edit => Object.assign({}, edit, {\n        type: \"wait\",\n        show: false,\n        id: -1\n      }));\n    },\n    style: {\n      position: \"absolute\",\n      top: \"30px\",\n      left: \"30px\",\n      width: \"30px\",\n      height: \"30px\",\n      borderRadius: \"50%\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      cursor: \"pointer\"\n    },\n    className: \"convex-2 select-disable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(FaTrash, {\n    fontSize: \"18\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })), React.createElement(PerfectScrollbar, {\n    options: {\n      handlers: [\"keyboard\", \"wheel\", \"touch\"]\n    },\n    className: \"w-100 h-71 px-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, editRoles.type === \"wait\" ? React.createElement(\"table\", {\n    className: \"table borderless w-100 lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    style: {\n      borderBottom: \"1px solid white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    style: {\n      padding: \"0px\"\n    },\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Event\"), React.createElement(\"td\", {\n    style: {\n      padding: \"0px\"\n    },\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Message\")), autoroles.map((x, i) => {\n    return React.createElement(\"tr\", {\n      className: \"choice\",\n      onClick: () => setEditRoles(edit => Object.assign({}, edit, {\n        id: i,\n        show: true,\n        type: \"edit\"\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, Object.keys(x).map(key => {\n      return React.createElement(\"td\", {\n        style: {\n          padding: \"7px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, key !== \"edit\" ? x[key].current.length > 12 ? x[key].current.substring(0, 12) + \"...\" : x[key].current : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(FaPen, {\n        fontSize: \"18\",\n        onClick: e => {\n          e.stopPropagation();\n          setEditRoles(edit => Object.assign({}, edit, {\n            id: i,\n            type: \"edit\"\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(FaTrash, {\n        fontSize: \"18\",\n        onClick: e => {\n          e.stopPropagation();\n          setAutoroles(autoroles => {\n            let arr = [...autoroles];\n            arr.splice(i, 1);\n            return arr;\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })));\n    }));\n  }))) : editRoles.type === \"edit\" ? React.createElement(\"table\", {\n    className: \"table borderless w-100 lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    style: {\n      borderBottom: \"1px solid white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    scope: \"col\",\n    style: {\n      padding: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"Event\"), React.createElement(\"td\", {\n    scope: \"col\",\n    style: {\n      padding: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Message\")), autoroles[editRoles.id] ? React.createElement(\"tr\", {\n    style: {\n      borderRadius: \"25px\",\n      overflow: \"hidden\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    style: {\n      padding: \"5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, autoroles[editRoles.id].on.current, React.createElement(\"div\", {\n    style: {\n      height: \"102px\",\n      padding: \"5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(PerfectScrollbar, {\n    style: {\n      minWidth: `${longestEvent + 55}px`\n    },\n    className: \"concave-2 rounded\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, allEvents.map(ev => {\n    return React.createElement(\"div\", {\n      className: \"choice\",\n      onClick: () => {\n        setAutoroles(roles => {\n          console.log(roles);\n          let arr = [...roles];\n          arr[editRoles.id].on.current = ev;\n          return arr;\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, ev);\n  })))), React.createElement(\"td\", {\n    style: {\n      height: \"94px\",\n      padding: \"5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    value: autoroles[editRoles.id].message.current,\n    type: \"text\",\n    className: \"auto-msg-txtar w-100 h-100 concave-2 rounded\",\n    onChange: e => {\n      e.persist();\n      setAutoroles(roles => {\n        let arr = [...roles];\n        arr[editRoles.id].message.current = e.target.value;\n        return arr;\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }))) : \"\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  })));\n};\n\nexport default AutoMessages;","map":{"version":3,"sources":["C:/Users/Romas/astro/src/components/dashboard/server/automessages.jsx"],"names":["React","PerfectScrollbar","FaPen","FaTrash","FaCheck","FaPlus","useState","useEffect","getLongestWidth","AutoMessages","allEvents","longestEvent","setLongestEvent","autoroles","setAutoroles","on","current","message","editRoles","setEditRoles","id","show","type","longest","position","e","index","length","roles","arr","edit","Object","assign","top","right","width","height","borderRadius","display","alignItems","justifyContent","cursor","splice","left","handlers","borderBottom","padding","map","x","i","keys","key","substring","stopPropagation","overflow","minWidth","ev","console","log","persist","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { FaPen, FaTrash, FaCheck, FaPlus } from \"react-icons/fa\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getLongestWidth } from \"../utilities/events\";\r\nconst AutoMessages = () => {\r\n  const allEvents = [\"Welcome\", \"Goodbye\", \"Level\", \"Role\"];\r\n  const [longestEvent, setLongestEvent] = useState(0);\r\n  const [autoroles, setAutoroles] = useState([\r\n    {\r\n      on: { current: \"Welcome\" },\r\n      message: { current: \"Hello, {USER}, welcome to our channel\" },\r\n    },\r\n    {\r\n      on: { current: \"Goodbye\" },\r\n      message: { current: \"Bye, {USER}, we will miss you\" },\r\n    },\r\n    {\r\n      on: { current: \"Level\" },\r\n      message: { current: \"{USER} has just leveled up to {LEVEL}\" },\r\n    },\r\n  ]);\r\n\r\n  const [editRoles, setEditRoles] = useState({\r\n    id: -1,\r\n    show: false,\r\n    type: \"wait\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    let longest = getLongestWidth(allEvents);\r\n    setLongestEvent(longest);\r\n  }, []);\r\n  return (\r\n    <div className=\"w-100 py-4 px-4\" style={{ position: \"relative\" }}>\r\n      <div className=\"lead justify-content-center mb-3 d-flex\">\r\n        Auto Messages\r\n      </div>\r\n      {editRoles.type === \"wait\" ? (\r\n        <div\r\n          onClick={(e) => {\r\n            let index = autoroles.length;\r\n            setAutoroles((roles) => {\r\n              let arr = [...roles];\r\n              arr[index] = {\r\n                on: { current: \"select\" },\r\n                message: { current: \"type some message\" },\r\n              };\r\n              return arr;\r\n            });\r\n            setEditRoles((edit) =>\r\n              Object.assign({}, edit, { type: \"edit\", id: index, show: true })\r\n            );\r\n          }}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"30px\",\r\n            right: \"30px\",\r\n            width: \"30px\",\r\n            height: \"30px\",\r\n            borderRadius: \"50%\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          className=\"convex-2 ml-4 select-disable\"\r\n        >\r\n          <FaPlus fontSize=\"18\"></FaPlus>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          onClick={() => {\r\n            setEditRoles((edit) => Object.assign({}, edit, { type: \"wait\" }));\r\n          }}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"30px\",\r\n            right: \"30px\",\r\n            width: \"30px\",\r\n            height: \"30px\",\r\n            borderRadius: \"50%\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          className=\"convex-2 select-disable\"\r\n        >\r\n          <FaCheck fontSize=\"18\"></FaCheck>\r\n        </div>\r\n      )}\r\n      {editRoles.type !== \"wait\" && (\r\n        <div\r\n          onClick={() => {\r\n            setAutoroles((roles) => {\r\n              let arr = [...roles];\r\n              arr.splice(editRoles.id, 1);\r\n              return arr;\r\n            });\r\n            setEditRoles((edit) =>\r\n              Object.assign({}, edit, {\r\n                type: \"wait\",\r\n                show: false,\r\n                id: -1,\r\n              })\r\n            );\r\n          }}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: \"30px\",\r\n            left: \"30px\",\r\n            width: \"30px\",\r\n            height: \"30px\",\r\n            borderRadius: \"50%\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          className=\"convex-2 select-disable\"\r\n        >\r\n          <FaTrash fontSize=\"18\"></FaTrash>\r\n        </div>\r\n      )}\r\n      <PerfectScrollbar\r\n        options={{ handlers: [\"keyboard\", \"wheel\", \"touch\"] }}\r\n        className=\"w-100 h-71 px-3\"\r\n      >\r\n        {editRoles.type === \"wait\" ? (\r\n          <table className=\"table borderless w-100 lead\">\r\n            <tbody>\r\n              <tr style={{ borderBottom: \"1px solid white\" }}>\r\n                <td style={{ padding: \"0px\" }} scope=\"col\">\r\n                  Event\r\n                </td>\r\n                <td style={{ padding: \"0px\" }} scope=\"col\">\r\n                  Message\r\n                </td>\r\n                {/* <td style={{ padding: \"0px\" }} scope=\"col\">\r\n                  Edit\r\n                </td> */}\r\n              </tr>\r\n              {autoroles.map((x, i) => {\r\n                return (\r\n                  <tr\r\n                    className=\"choice\"\r\n                    onClick={() =>\r\n                      setEditRoles((edit) =>\r\n                        Object.assign({}, edit, {\r\n                          id: i,\r\n                          show: true,\r\n                          type: \"edit\",\r\n                        })\r\n                      )\r\n                    }\r\n                  >\r\n                    {Object.keys(x).map((key) => {\r\n                      return (\r\n                        <td style={{ padding: \"7px\" }}>\r\n                          {key !== \"edit\" ? (\r\n                            x[key].current.length > 12 ? (\r\n                              x[key].current.substring(0, 12) + \"...\"\r\n                            ) : (\r\n                              x[key].current\r\n                            )\r\n                          ) : (\r\n                            <div>\r\n                              <FaPen\r\n                                fontSize=\"18\"\r\n                                onClick={(e) => {\r\n                                  e.stopPropagation();\r\n                                  setEditRoles((edit) =>\r\n                                    Object.assign({}, edit, {\r\n                                      id: i,\r\n                                      type: \"edit\",\r\n                                    })\r\n                                  );\r\n                                }}\r\n                              ></FaPen>\r\n                              <FaTrash\r\n                                fontSize=\"18\"\r\n                                onClick={(e) => {\r\n                                  e.stopPropagation();\r\n                                  setAutoroles((autoroles) => {\r\n                                    let arr = [...autoroles];\r\n                                    arr.splice(i, 1);\r\n                                    return arr;\r\n                                  });\r\n                                }}\r\n                              ></FaTrash>\r\n                            </div>\r\n                          )}\r\n                        </td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        ) : editRoles.type === \"edit\" ? (\r\n          <table className=\"table borderless w-100 lead\">\r\n            <tbody>\r\n              <tr style={{ borderBottom: \"1px solid white\" }}>\r\n                <td scope=\"col\" style={{ padding: 0 }}>\r\n                  Event\r\n                </td>\r\n                <td scope=\"col\" style={{ padding: 0 }}>\r\n                  Message\r\n                </td>\r\n              </tr>\r\n              {autoroles[editRoles.id] ? (\r\n                <tr style={{ borderRadius: \"25px\", overflow: \"hidden\" }}>\r\n                  <td style={{ padding: \"5px\" }}>\r\n                    {autoroles[editRoles.id].on.current}\r\n                    <div style={{ height: \"102px\", padding: \"5px\" }}>\r\n                      <PerfectScrollbar\r\n                        style={{ minWidth: `${longestEvent + 55}px` }}\r\n                        className=\"concave-2 rounded\"\r\n                      >\r\n                        {allEvents.map((ev) => {\r\n                          return (\r\n                            <div\r\n                              className=\"choice\"\r\n                              onClick={() => {\r\n                                setAutoroles((roles) => {\r\n                                  console.log(roles);\r\n                                  let arr = [...roles];\r\n                                  arr[editRoles.id].on.current = ev;\r\n                                  return arr;\r\n                                });\r\n                              }}\r\n                            >\r\n                              {ev}\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </PerfectScrollbar>\r\n                    </div>\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      height: \"94px\",\r\n                      padding: \"5px\",\r\n                    }}\r\n                  >\r\n                    <textarea\r\n                      value={autoroles[editRoles.id].message.current}\r\n                      type=\"text\"\r\n                      className=\"auto-msg-txtar w-100 h-100 concave-2 rounded\"\r\n                      onChange={(e) => {\r\n                        e.persist();\r\n                        setAutoroles((roles) => {\r\n                          let arr = [...roles];\r\n                          arr[editRoles.id].message.current = e.target.value;\r\n                          return arr;\r\n                        });\r\n                      }}\r\n                    ></textarea>\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </PerfectScrollbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoMessages;\r\n"]},"metadata":{},"sourceType":"module"}
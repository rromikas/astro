{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Romas\\\\astro\\\\src\\\\animations\\\\animation.jsx\";\nimport React, { useState } from \"react\";\nimport { Spring, animated, config } from \"react-spring/renderprops\";\nimport paths from \"./paths\";\nimport { interpolate } from \"flubber\";\n\nconst Animation = () => {\n  const [pinger, ping] = useState(0);\n  const interpolator = interpolate(paths[\"discord\"], paths[`discord-${pinger >= 2 ? \"right\" : \"left\"}`]);\n  return React.createElement(\"svg\", {\n    width: \"500\",\n    height: \"500\",\n    viewBox: \"0 0 500 500\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Spring, {\n    config: {\n      delay: 1000\n    },\n    reset: true,\n    native: true,\n    from: {\n      t: pinger ? 0 : 1,\n      color: pinger ? \"#7289da\" : \"red\"\n    },\n    to: {\n      t: pinger ? 1 : 0,\n      color: pinger ? \"red\" : \"#7289da\"\n    },\n    onRest: () => ping((pinger + 1) % 4),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, ({\n    t,\n    color\n  }) => React.createElement(animated.path, {\n    d: t.interpolate(interpolator),\n    fill: \"WHITE\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })));\n};\n\nexport default Animation;","map":{"version":3,"sources":["C:/Users/Romas/astro/src/animations/animation.jsx"],"names":["React","useState","Spring","animated","config","paths","interpolate","Animation","pinger","ping","interpolator","delay","t","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,MAA3B,QAAyC,0BAAzC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,MAAD,EAASC,IAAT,IAAiBR,QAAQ,CAAC,CAAD,CAA/B;AACA,QAAMS,YAAY,GAAGJ,WAAW,CAC9BD,KAAK,CAAC,SAAD,CADyB,EAE9BA,KAAK,CAAE,WAAUG,MAAM,IAAI,CAAV,GAAc,OAAd,GAAwB,MAAO,EAA3C,CAFyB,CAAhC;AAIA,SACE;AAAK,IAAA,KAAK,EAAC,KAAX;AAAiB,IAAA,MAAM,EAAC,KAAxB;AAA8B,IAAA,OAAO,EAAC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,MAAM,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KADV;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,MAAM,MAHR;AAIE,IAAA,IAAI,EAAE;AAAEC,MAAAA,CAAC,EAAEJ,MAAM,GAAG,CAAH,GAAO,CAAlB;AAAqBK,MAAAA,KAAK,EAAEL,MAAM,GAAG,SAAH,GAAe;AAAjD,KAJR;AAKE,IAAA,EAAE,EAAE;AAAEI,MAAAA,CAAC,EAAEJ,MAAM,GAAG,CAAH,GAAO,CAAlB;AAAqBK,MAAAA,KAAK,EAAEL,MAAM,GAAG,KAAH,GAAW;AAA7C,KALN;AAME,IAAA,MAAM,EAAE,MAAMC,IAAI,CAAC,CAACD,MAAM,GAAG,CAAV,IAAe,CAAhB,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG,CAAC;AAAEI,IAAAA,CAAF;AAAKC,IAAAA;AAAL,GAAD,KACC,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,CAAC,EAAED,CAAC,CAACN,WAAF,CAAcI,YAAd,CAAlB;AAA+C,IAAA,IAAI,EAAE,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADF,CADF;AAgBD,CAtBD;;AAwBA,eAAeH,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Spring, animated, config } from \"react-spring/renderprops\";\r\nimport paths from \"./paths\";\r\nimport { interpolate } from \"flubber\";\r\n\r\nconst Animation = () => {\r\n  const [pinger, ping] = useState(0);\r\n  const interpolator = interpolate(\r\n    paths[\"discord\"],\r\n    paths[`discord-${pinger >= 2 ? \"right\" : \"left\"}`]\r\n  );\r\n  return (\r\n    <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\">\r\n      <Spring\r\n        config={{ delay: 1000 }}\r\n        reset\r\n        native\r\n        from={{ t: pinger ? 0 : 1, color: pinger ? \"#7289da\" : \"red\" }}\r\n        to={{ t: pinger ? 1 : 0, color: pinger ? \"red\" : \"#7289da\" }}\r\n        onRest={() => ping((pinger + 1) % 4)}\r\n      >\r\n        {({ t, color }) => (\r\n          <animated.path d={t.interpolate(interpolator)} fill={\"WHITE\"} />\r\n        )}\r\n      </Spring>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Animation;\r\n"]},"metadata":{},"sourceType":"module"}
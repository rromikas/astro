{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Romas\\\\astro\\\\src\\\\animations\\\\animation.jsx\";\nimport React, { useState } from \"react\";\nimport { Spring, animated } from \"react-spring/renderprops\";\nimport paths from \"./paths\";\nimport { interpolate } from \"flubber\";\n\nconst Animation = () => {\n  const [pinger, ping] = useState(true);\n  console.log(paths[\"discord\"], paths[\"youtube\"]);\n  const interpolator = interpolate(paths[\"discord\"], paths[\"youtube\"]);\n  console.log(\"INTERPOLATOR\", interpolator(0.5));\n  return React.createElement(\"svg\", {\n    width: \"500\",\n    height: \"500\",\n    viewBox: \"0 0 500 500\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Spring, {\n    reset: true,\n    reverse: true,\n    native: true,\n    from: {\n      t: 0\n    },\n    to: {\n      t: 1\n    },\n    onRest: () => ping(!pinger),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, ({\n    t\n  }) => React.createElement(animated.path, {\n    d: t.interpolate(interpolator),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })));\n};\n\nexport default Animation;","map":{"version":3,"sources":["C:/Users/Romas/astro/src/animations/animation.jsx"],"names":["React","useState","Spring","animated","paths","interpolate","Animation","pinger","ping","console","log","interpolator","t"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,0BAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AACA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,MAAD,EAASC,IAAT,IAAiBP,QAAQ,CAAC,IAAD,CAA/B;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAAC,SAAD,CAAjB,EAA8BA,KAAK,CAAC,SAAD,CAAnC;AAEA,QAAMO,YAAY,GAAGN,WAAW,CAACD,KAAK,CAAC,SAAD,CAAN,EAAmBA,KAAK,CAAC,SAAD,CAAxB,CAAhC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BC,YAAY,CAAC,GAAD,CAAxC;AACA,SACE;AAAK,IAAA,KAAK,EAAC,KAAX;AAAiB,IAAA,MAAM,EAAC,KAAxB;AAA8B,IAAA,OAAO,EAAC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,OAAO,MAFT;AAGE,IAAA,MAAM,MAHR;AAIE,IAAA,IAAI,EAAE;AAAEC,MAAAA,CAAC,EAAE;AAAL,KAJR;AAKE,IAAA,EAAE,EAAE;AAAEA,MAAAA,CAAC,EAAE;AAAL,KALN;AAME,IAAA,MAAM,EAAE,MAAMJ,IAAI,CAAC,CAACD,MAAF,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG,CAAC;AAAEK,IAAAA;AAAF,GAAD,KAAW,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,CAAC,EAAEA,CAAC,CAACP,WAAF,CAAcM,YAAd,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARd,CADF,CADF;AAcD,CApBD;;AAsBA,eAAeL,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Spring, animated } from \"react-spring/renderprops\";\r\nimport paths from \"./paths\";\r\nimport { interpolate } from \"flubber\";\r\nconst Animation = () => {\r\n  const [pinger, ping] = useState(true);\r\n  console.log(paths[\"discord\"], paths[\"youtube\"]);\r\n\r\n  const interpolator = interpolate(paths[\"discord\"], paths[\"youtube\"]);\r\n  console.log(\"INTERPOLATOR\", interpolator(0.5));\r\n  return (\r\n    <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\">\r\n      <Spring\r\n        reset\r\n        reverse\r\n        native\r\n        from={{ t: 0 }}\r\n        to={{ t: 1 }}\r\n        onRest={() => ping(!pinger)}\r\n      >\r\n        {({ t }) => <animated.path d={t.interpolate(interpolator)} />}\r\n      </Spring>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Animation;\r\n"]},"metadata":{},"sourceType":"module"}